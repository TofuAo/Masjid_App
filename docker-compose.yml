version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: masjid_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-masjid_password}
      MYSQL_DATABASE: ${DB_NAME:-masjid_app}
      MYSQL_USER: ${DB_USER:-masjid_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-masjid_password}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/masjid_app_schema.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3307:3306"
    networks:
      - masjid_network

  # Backend API
  backend:
    build: ./backend
    container_name: masjid_backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=${DB_USER:-masjid_user}
      - DB_PASSWORD=${DB_PASSWORD:-masjid_password}
      - DB_NAME=${DB_NAME:-masjid_app}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_here}
      - JWT_EXPIRES_IN=24h
      - PORT=5000
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    ports:
      - "5000:5000"
    depends_on:
      - mysql
    networks:
      - masjid_network
    volumes:
      - ./uploads:/app/uploads

  # Frontend
  frontend:
    build: .
    container_name: masjid_frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - masjid_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: masjid_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-dev.conf:/etc/nginx/nginx.conf
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - masjid_network

volumes:
  mysql_data:

networks:
  masjid_network:
    driver: bridge
